"""
21. Напишите программу, которая определит позицию второго вхождения строки в списке либо сообщит, что её нет.

Пример:

список: ["qwe", "asd", "zxc", "qwe", "ertqwe"], ищем: "qwe", ответ: 3
список: ["йцу", "фыв", "ячс", "цук", "йцукен", "йцу"], ищем: "йцу", ответ: 5
список: ["йцу", "фыв", "ячс", "цук", "йцукен"], ищем: "йцу", ответ: -1
список: ["123", "234", 123, "567"], ищем: "123", ответ: -1
список: [], ищем: "123", ответ: -1
"""


def find_index(lst, s):
    counter = 0
    for i, x in enumerate(lst):
        if s == x:
            counter += 1
            if counter == 2:
                return i
    return -1


lst = ["qwe", "asd", "zxc", "qwe", "ertqwe"]
s = input('enter the string: ')

result = find_index(lst, s)
print(f'позиция второго вхождения строки "{s}" в списке {lst}: ', result)


# Синтаксис:
# enumerate(sequence, start=0)
# Параметры:
# sequence - любая последовательность, итератор, или объект, поддерживающий метод итератора __next__(),
# start - число int, начальное значение счётчика.
# Возвращаемое значение:
# tuple - кортеж, содержащий пары ('счётчик', 'элемент') для элементов указанной последовательности.
# Описание:
# Функция enumerate() вернет кортеж, содержащий отсчет от start и значение, полученное из итерации по объекту. 
# Переданный в функцию объект должен быть последовательностью, итератором или другим объектом, 
# который поддерживает метод итератора __next__().
# Функция enumerate() применяется в случаях, когда необходим счётчик количества элементов в последовательности. 
# Позволяет избавиться от необходимости инициировать и обновлять отдельную переменную-счётчик.


# >>> type(enumerate)
# <class 'type'>
# >>> func = enumerate(["привет", "не привет", "пока"]) 
# >>> type(func) 
# <class 'enumerate'>
# >>> next(func)
# (0, 'привет')
# >>> next(func)
# (1, 'не привет')
# >>> next(func)
# (2, 'пока')
# >>> next(func)
# Traceback (most recent call last):
#   File "<stdin>", line 1, in <module>
# StopIteration
# >>> func = enumerate(["привет", "не привет", "пока"]) 
# >>> i, x = next(func)
# >>> i
# 0
# >>> x
# 'привет'
# >>> i
# 0
# >>> x
# 'привет'
# >>> i, x = next(func)
# >>> i
# 1
# >>> x
# 'не привет'
# >>> i, x = next(func)
# >>> i
# 2
# >>> x
# 'пока'
# >>> i, x = next(func)
# Traceback (most recent call last):
#   File "<stdin>", line 1, in <module>
# StopIteration
# >>>
